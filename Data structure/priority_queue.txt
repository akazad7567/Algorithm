<<<<<<<prority_queue(max_heap)>>>>>>>>>
#include<bits/stdc++.h>
using namespace std;

void showPQ(priority_queue<int>q)
{
    priority_queue<int>q2=q;

    while(!q2.empty())
    {
        printf("%d ",q2.top());
        q2.pop();
    }
    printf("\n");
}

int main()
{
    priority_queue<int>q;
    int n;
    scanf("%d",&n);
    for(int i=0;i<n;i++)
    {
        int tmp;
        scanf("%d",&tmp);
        q.push(tmp);
    }

    showPQ(q);
    q.pop();
    printf("After deleting : ");
    showPQ(q);
}


<<<<<<<<<priority_queue(min_heap)>>>>>>>>
#include<bits/stdc++.h>
using namespace std;

void showPQ(priority_queue<int,vector<int>,greater<int>> q)
{
    priority_queue<int,vector<int>,greater<int>>q2=q;

    while(!q2.empty())
    {
        printf("%d ",q2.top());
        q2.pop();
    }
    printf("\n");

}
int main()
{
    priority_queue<int,vector<int>,greater<int>>q;
    int n;
    scanf("%d",&n);
    while(n--)
    {
        int tmp;
        scanf("%d",&tmp);
        q.push(tmp);
    }
    showPQ(q);
    q.pop();
    printf("After deleting : ");
    showPQ(q);
}


<<<<<<min heap with pair>>>>>>>>>>>>
priority_queue<pair<int,int>,vector<int,int>,greater<pair<int,int>>pq;
pq.push(make_pair(1,2));
